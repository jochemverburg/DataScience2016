This READ ME describes what is included in this repository. This repository is linked to by the paper 'Analyzing timetables using XML: A case study on a university' by M.C. Hol and J.G.J. Verburg, which is included in the main folder of the repository. It also includes a video (Results Video.flv) presenting the results.

The repository does not include the source files, since we were asked to treat these confidentially. You might request these files by sending a mail to m.c.hol@student.utwente.nl or j.g.j.verburg@student.utwente.nl.

1. Transformations
The folder 'Scripts' includes the C# scripts that were used for transformation. This contains 3 classes, which have some documentation. The class ScriptToXML was used to load the data into XML from the Excel-files given (this was done by first transforming the Excel-files to TSV-files). The class XQueries was used to be able to run XQuery-statements in C# instead of BaseX, especially useful in case there was not enough Main Memory in BaseX. The class XMLToTSV was used to transform XML results back into a TSV file, so it could be imported in Excel for analysis. When running (in Visual Studio), often it gives an error the first time it is run because of a fix to expand the Main Memory used, however the second time it will run.

2. XQueries
The folder 'XQueries' includes all XQueries that were used to query the XML files and generate results. The XQueries are sometimes a bit different than the ones sometimes used for results, small adjustments can be made in them to e.g. use studyyear instead of year and month, or adjust the times checked in case of the room occupation.

2.1 Students KPIs
To calculate the students' KPIs, first TomModules.xq should be run to select only all TOM modules from the general xml. Then KPIResultsIntermediary.xq has to be run to make an intermediary file to be used to calculate all KPIs, which makes sure that only event at each time is taken and then mainly groups it per module/day. Then all files KPI*fromTempFile.xq (with * being a number) can be used to calculate KPIs. The function cast_to_date was often reused to transform the string inputs into an XML date.

2.2 Room KPI
RoomKPIResultsIntermediary.xq has the same function as before, it makes an intermediary file which can then be used faster for multiple queries. It groups by dates and rooms. RoomKPIFromTempFile.xq uses a function to have unique lectures at each time and cast_to_date to cast the dates to an XML date. Then it calculates the occupation per year/month, however the grouping can also be replaced e.g. by $category/@year. It currently takes into account lectures from 8:00 till 18:00, however by changing $startDay and $endDay, this can be adjusted.

2.3 Room sizes
The query RoomCapacityExploration.xq counts the number of times each room is used and adds the capacity of the room in the XML. RoomCapacityTrend.xq resembles this query, but groups also by date.

2.4 Room locations
Like for room sizes the query RoomLocationExploration.xq counts the number of times a lecture was given, this time for a study and a building. RoomLocationTrend.xq does this per month, and shows how you can group by building's floors instead of just building, this might be interesting for further analysis.

3. Results
The folder 'Results' includes the results in Excel-files, which can be used to further explore the data for patterns. 

KPI-results.xlsx contains all results regarding KPIs, which has each XML node generated by the XQueries transformed into a row in Excel using the transformation scripts. All tabs contain the useful graphs, you can also 'play' with the data if you want to see if anything interesting can be found.

RoomCapacityExploration.xlsx contains the results regarding the exploration of room sizes. It shows the graph included in the paper, and also shows how the correlation was calculated using Excel. RoomCapacityTrend.xlsx shows the trend analysis of the room sizes, using the SUMIF-function to calculate the amount of uses in each category.

RoomLocationExploration.xlsx and RoomLocationTrend.xlsx both have an extra tab in which for each study-abbreviation the study association, home base, and alternative home bases have been filled in. Some functions have then been used to add columns in the table, to calculate whether a lecture was in the home base for example. Each file has a pivot graph in which you can play with the data to find out patterns.